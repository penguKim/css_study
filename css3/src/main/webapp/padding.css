@charset "UTF-8";
/* 1. padding의 방향별 지정법 */
/* 내부 여백에 공간을 준다는건 요소의 영역이 늘어나는 것이다. */

#sec01>div {
	border: 1px solid #04d;
}

.pt {
	padding-top: 30px;
}

.pr {
	padding-right: 20%;
	text-align: right;
}

.pb {
	padding-bottom: 2em;
}

.pl {
/* 	text-indent: 10% */
	padding-left: 10% 
}

/* 2. padding의 값 갯수별 지정법 */
#sec02>div {
	border: 1px solid #d04;
}

.pn01 {
	padding:50px;
}

.pn02 {
	/* 
	수직은 고정이지만 좌우는 화면넓이에 따라 달라지므로
	%를 써서 화면에 맞춰 가변적으로 맞춰준다.
	 */
	padding: 50px 20%;
}

.pn03 {
	padding: 50px 30% 10px;
}

.pn04 {
	padding: 30px 30% 1em 10%;
}

#sec03>span, #sec03>label {
	background-color: #fc5;
/* 	width: 100px; */
/* 	height: 30px; */
/* 
인라인 요소는 크기변경이 안되므로 width,height 가 아니라
padding을 이용해 내부 영역을 늘려줘서 크기를 늘린다.
*/
	padding: 7px 40px;
}
/* padding을 이용한 이미지 꾸미기 */
.ph01 {
	border: 20px solid #035;
	padding: 70px;
	margin-right: 30px;
}

.ph02 {
	border: 1px solid;
	border-radius: 10px;
	padding: 20px 20px 400px;
	box-shadow: 1px 2px 10px #333;
}

.ph03 {
	border: 1px solid;
	/* 
	css에서 우선순위에서 밀리지않고 최우선으로
	적용되게 하려면 !important를 사용한다.
	 */
	border-radius: 50% !important;
}

.ph03:hover {
	border-radius: 0;
	border-radius: 10px;
	transition: 1s;
}








